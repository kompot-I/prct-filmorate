DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS user_like_film;

DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS rating;
DROP TABLE IF EXISTS users;


CREATE TABLE IF NOT EXISTS users(
    id          INT         GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR,
    login       VARCHAR     UNIQUE NOT NULL,
    email       VARCHAR     UNIQUE,
    birthday    DATE        CHECK (birthday <= CURRENT_DATE)
);

CREATE TABLE IF NOT EXISTS genre (
    id      INT         GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    VARCHAR
);

CREATE TABLE IF NOT EXISTS rating (
    id      INT         GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    VARCHAR(5)
);

CREATE TABLE IF NOT EXISTS films (
    id              INT             GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name            VARCHAR         NOT NULL,
    description     VARCHAR(200),   CHECK (LENGTH(description) <= 200),
    release_date    DATE            CHECK (release_date > '1895-12-28'),
    duration        INT             CHECK (duration > 0),
    rating_id       INT,
    FOREIGN KEY (rating_id) REFERENCES rating(id)
);

CREATE TABLE IF NOT EXISTS friends (
    user_id     INT,
    friend_id   INT,
    approved    BOOLEAN,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (friend_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS user_like_film (
    film_id     INT,
    user_id     INT,
    FOREIGN KEY (film_id) REFERENCES films(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id     INT,
    genre_id    INT,
    FOREIGN KEY (film_id) REFERENCES films(id),
    FOREIGN KEY (genre_id) REFERENCES genre(id)
);